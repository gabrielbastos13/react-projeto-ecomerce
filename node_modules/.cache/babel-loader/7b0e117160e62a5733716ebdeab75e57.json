{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/\\xC1rea de Trabalho/store-record/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider\n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubtotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubtotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 14\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/gabriel/√Årea de Trabalho/store-record/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubtotal","cartTax","cartTotal","getItem","id","product","find","item","handleDetail","setState","addToCart","tempProducts","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removedProduct","clearCart","setProducts","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","forEach","singleItem","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":[" import React, { Component } from 'react'\n import {storeProducts, detailProduct} from './data'\nconst ProductContext = React.createContext();\n//Provider\n//Consumer\n\n  class ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct:detailProduct,\n        cart: [], \n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubtotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    }\n    componentDidMount() {\n        this.setProducts();\n\n    }\n    setProducts () {\n        let tempProducts = []\n        storeProducts.forEach(item => {\n            const singleItem = {...item}\n            tempProducts = [...tempProducts, singleItem]\n\n        })\n        this.setState(()=>{\n            return {products:tempProducts}\n        })\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id)\n        return product\n    }\n    handleDetail = (id) => {\n        const product = this.getItem(id)\n        this.setState(() => {\n            return { detailProduct: product }\n        })\n    }\n    addToCart = (id) => {\n        let tempProducts = [...this.state.products]\n        const index = tempProducts.indexOf(this.getItem(id))\n        const product = tempProducts[index];        \n        product.inCart = true\n        product.count = 1\n        const price = product.price\n        product.total = price \n        this.setState(\n            () => {\n            return { products: tempProducts, cart:[...this.state.cart,\n            product] }\n            },\n            () => {\n                this.addTotals()\n            }\n        )\n    }\n    openModal = id => {\n        const product = this.getItem(id)\n        this.setState(() => {\n            return { modalProduct: product, modalOpen: true}\n        })\n    }\n    closeModal = () => {\n        this.setState(()=>{\n            return { modalOpen: false}\n        })\n    }\n    increment = id => {\n        let tempCart = [...this.state.cart]\n        const selectedProduct = tempCart.find(item => item.id === id)\n\n        const index = tempCart.indexOf(selectedProduct)\n        const product = tempCart[index]\n\n        product.count = product.count + 1 \n        product.total = product.count * product.price\n\n        this.setState(() => {return{cart:[...tempCart]}}, () => {this.addTotals()})\n    }\n    decrement = id => {\n        let tempCart = [...this.state.cart]\n        const selectedProduct = tempCart.find(item => item.id === id)\n\n        const index = tempCart.indexOf(selectedProduct)\n        const product = tempCart[index]\n        product.count = product.count -1 \n        \n        if(product.count === 0){\n            this.removeItem(id)\n        } else {\n            product.total = product.count * product.price\n            this.setState(() => {return{cart:[...tempCart]}}, () => {this.addTotals()}) \n        }\n    }\n    removeItem = id => {\n        let tempProducts = [...this.state.products]\n        let tempCart = [...this.state.cart]\n\n        tempCart = tempCart.filter(item => item.id !== id)\n\n        const index = tempProducts.indexOf(this.getItem(id))\n        let removedProduct = tempProducts[index]\n        removedProduct.inCart = false\n        removedProduct.count = 0\n        removedProduct.total = 0\n\n        this.setState(() => {\n            return {\n                cart: [...tempCart],\n                products: [...tempProducts]\n        }\n    }, () =>{\n        this.addTotals()\n    })\n    }\n    clearCart = () => {\n        this.setState(\n        () => {\n            return { cart: [] }\n        },\n        () => {\n            this.setProducts()\n            this.addTotals()\n        })\n    }\n    addTotals = () => {\n        let subTotal = 0\n        this.state.cart.map(item => (subTotal += item.total))\n        const tempTax = subTotal * 0.1\n        const tax = parseFloat(tempTax.toFixed(2))\n        const total = subTotal + tax\n        this.setState(()=>{\n            return {\n                cartSubtotal: subTotal,\n                cartTax: tax,\n                cartTotal: total\n            }\n        })\n    }\n\n     render() {         \n         return (\n             <ProductContext.Provider\n              value={{\n                ...this.state,\n                handleDetail:this.handleDetail,\n                addToCart:this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n             }}>\n                {this.props.children}\n             </ProductContext.Provider>\n         )\n     }\n }\n \n const ProductConsumer = ProductContext.Consumer;\n\n export { ProductProvider, ProductConsumer}"]},"metadata":{},"sourceType":"module"}